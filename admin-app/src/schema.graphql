schema {
  query: BlogSchema
  mutation: BlogMutations
}

"""Represent the type of Author"""
type Author {
  name: String
  email: String
  id: String
  createdAt: String
  modifiedAt: String
}

"""Represent the type of Author"""
input AuthorSortParameter {
  name: SortOrder
  email: SortOrder
  id: SortOrder
  createdAt: SortOrder
  modifiedAt: SortOrder
}

type BlogMutations {
  """Create new Author"""
  createAuthor(name: String!, email: String!): Author

  """Update Author by id"""
  updateAuthor(name: String!, email: String!, id: String!): Author

  """Delete Author by id"""
  deleteAuthor(id: String!): Author

  """Create new Comment"""
  createComment(title: String!, authorId: String!, content: String!): Comment

  """Update Comment by id"""
  updateComment(title: String!, authorId: String!, content: String!, id: String!): Comment

  """Delete Comment by id"""
  deleteComment(id: String!): Comment

  """Create new Post"""
  createPost(title: String!, subtitle: String, authorId: String!, category: String, summary: String, content: String!): Post

  """Update Post by id"""
  updatePost(title: String!, subtitle: String, authorId: String!, category: String, summary: String, content: String!, id: String!): Post

  """Delete Post by id"""
  deletePost(id: String!): Post
}

"""Root of the Blog Schema"""
type BlogSchema {
  """Read Author by id"""
  Author(id: String!): Author

  """Read all Authors"""
  allAuthors(sort: AuthorSortParameter): [Author]

  """Read Comment by id"""
  Comment(id: String!): Comment

  """Read all Comments"""
  allComments(sort: CommentSortParameter): [Comment]

  """Read Post by id"""
  Post(id: String!): Post

  """Read all Posts"""
  allPosts(sort: PostSortParameter): [Post]
}

"""Represent the type of Comment"""
type Comment {
  title: String
  author: Author
  content: String
  id: String
  createdAt: String
  modifiedAt: String
}

"""Represent the type of Comment"""
input CommentSortParameter {
  title: SortOrder
  author: SortOrder
  content: SortOrder
  id: SortOrder
  createdAt: SortOrder
  modifiedAt: SortOrder
}

"""Represent the type of Post"""
type Post {
  title: String
  subtitle: String
  author: Author
  category: String
  summary: String
  content: String
  id: String
  createdAt: String
  modifiedAt: String
}

"""Represent the type of Post"""
input PostSortParameter {
  title: SortOrder
  subtitle: SortOrder
  author: SortOrder
  category: SortOrder
  summary: SortOrder
  content: SortOrder
  id: SortOrder
  createdAt: SortOrder
  modifiedAt: SortOrder
}

enum SortOrder {
  ASC
  DESC
}
